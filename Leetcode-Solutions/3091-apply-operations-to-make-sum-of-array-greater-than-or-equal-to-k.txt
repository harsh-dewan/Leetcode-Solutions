class Solution {
    

    
    HashMap<String, Integer> map = null;
    int operations = 0;
    
    
    
    public int updateMinOperations(String str, int k, int currSum, String max ) {
        if( currSum >= k ) return 0;
        if( map.getOrDefault(str, -1) != -1 )  return map.get(str);
        //increasing the element
        String[] arr = str.split("#");
        int arrLength = arr.length;
        String save = arr[arrLength-1];
        String newString = "";
        for(int i = 0; i < arrLength-1; i++) newString = newString + arr[i] + "#";
        String newEle = String.valueOf(Integer.valueOf(save)+1);
        newString  = newString + newEle;
        int op1 = 1 + updateMinOperations(newString, k, currSum+1, newEle);
        newString = "";
        for(int i = 0; i < arrLength-1; i++) newString = newString + arr[i] + "#";
        newString  = newString + save;
        int op2 = 1 + updateMinOperations(newString, k, currSum + Integer.valueOf(save), save);
        map.put(str, Integer.min(op1,op2));
        return Integer.min(op1, op2);
        
    }
    
    public int minOperations(int k) {
        if( k == 1 ) return 0;
        operations = 0;
        map = new HashMap<String, Integer>();
        String str = "1";
        updateMinOperations(str, k , 1, "1");
        return map.get("1");
    }
}