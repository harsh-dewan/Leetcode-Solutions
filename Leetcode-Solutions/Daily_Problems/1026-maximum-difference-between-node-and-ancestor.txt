/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    int maxDifference = 0;

    public void computeMAXDifference(TreeNode root, int minVal, int maxVal){
        if( root == null ) return;
        minVal = Integer.min(minVal,root.val);
        maxVal = Integer.max(maxVal,root.val);
        maxDifference = Integer.max(maxDifference, Math.abs(minVal-maxVal));
        computeMAXDifference(root.left, minVal, maxVal);
        computeMAXDifference(root.right, minVal, maxVal);
        return;
    }

    public int maxAncestorDiff(TreeNode root) {
        maxDifference  = 0;
        computeMAXDifference(root, root.val, root.val);
        return maxDifference;
    }
}