import java.util.*;
class Solution {
    public int[] maxSlidingWindow(int[] nums, int k) {
        
        if( nums.length == 0 || k == 0 ) return null;
        int numLength = nums.length;
        ArrayList<Integer> arrList = new ArrayList<Integer>();
        Deque<Integer> dq = new LinkedList<Integer>();
        int i = 0, j = 0;
        int[] arr = new int[numLength-k+1];
        int index=0;
        while( j < numLength ) {
            while( dq.size() > 0 && dq.getLast() < nums[j] ) dq.pollLast();
            dq.addLast(nums[j]);
            if( j-i+1 == k ) {
                arr[index++] = dq.getFirst();
                if( dq.getFirst() == nums[i] ) dq.pollFirst();
                i++;
            }
            j++;
        }
        return arr;
    }
}