class Solution {
    public int findKthLargest(int[] nums, int k) {
        if( nums == null || nums.length  == 0 ) return 0;
        if( nums.length == 1 ) return nums[0];
        int minValue = nums[0], maxValue = nums[0];
        HashMap<Integer,Integer> count = new HashMap<Integer,Integer>();
        count.put(nums[0],1);
        int length = nums.length;
        for(int i = 1; i < length; i++ ) {
            minValue = Integer.min(minValue, nums[i]);
            maxValue = Integer.max(maxValue, nums[i]);
            count.put(nums[i], count.getOrDefault(nums[i],0)+1);
        }
       // System.out.println("min: "+minValue+" max: "+maxValue);
        int index = 0;
        for(int i = maxValue; i >= minValue; i-- ) {
            int val = count.getOrDefault(i,-1);
            if( val == -1 ) continue;
            else {
                index += val;
                if( index >= k ) return i;
            }
        }
        return 0;
    }
}