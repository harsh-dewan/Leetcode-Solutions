class Solution {
    int[] dp = null;

    public int computeMinSquareNum(int num ) {
        if( num == 0 ) return 0;
        if( dp[num] != 0 ) return dp[num];
        int index = 1;
        int minOp = num; 
        while( (num - (int)Math.pow(index,2)) >= 0 ) {
            minOp = Integer.min(minOp,1+computeMinSquareNum(num-(int)Math.pow(index++,2)));
        }
        return dp[num] = minOp;
    }

    public int numSquares(int n) {
        if( n == 1 ) return 1;
        dp = new int[n+1];
        dp[0] = 0;
        dp[1] = 1;
        computeMinSquareNum(n);
        return dp[n];
    }
}