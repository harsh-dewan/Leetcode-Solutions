class Solution {
    public int mincostTickets(int[] days, int[] costs) {
        int[] dp = new int[days.length];
        int daysLength = days.length;
        dp[daysLength-1] = Integer.min(costs[0],Integer.min(costs[1],costs[2]));
        for(int i = daysLength-2; i >= 0; i-- ) {
            dp[i] = costs[0]+dp[i+1];
            int nextIndex = days[i]+7;
            boolean nextFound =  false;
            for(int index = i+1; index < daysLength; index++) {
                if( days[index] >= nextIndex) {
                    dp[i] = Integer.min(dp[i],costs[1]+dp[index]);
                    nextFound = true;
                    break;
                }
            }
            if( nextFound  ==  false ) dp[i] = Integer.min(dp[i],costs[1]);
            nextFound = false;
            nextIndex = days[i] + 30;
            for(int index = i+1; index < daysLength; index++ ) {
                if(days[index] >= nextIndex) {
                    dp[i] = Integer.min(dp[i],costs[2]+dp[index]);
                    nextFound = true;
                    break;
                }
            }
            if( nextFound  ==  false ) dp[i] = Integer.min(dp[i],costs[2]);
        }
        //for(int i = 0 ; i < daysLength; i++) System.out.print(dp[i]+" ");
        return dp[0];
    }
}
