class Solution {
    public int longestPalindrome(String s) {
        int count = 0;
        int[] lower = new int[26];
        int[] higher = new int[26];
        int slength = s.length();
        for(int index = 0; index < slength; index++ ) {
            char ch = s.charAt(index);
            if( ch >= 'a' && ch <= 'z') lower[ch-'a'] += 1;
            else if( ch >= 'A' && ch <= 'Z') higher[ch-'A'] += 1;
        }
        for(int i = 0; i < 26; i++ ) {
            count += lower[i]/2;
            count += higher[i]/2;
            lower[i] = lower[i]%2;
            higher[i] = higher[i]%2;
        }
        count = count*2;
        for(int i = 0 ; i < 26 ; i++ ) {
            if(lower[i] == 1) return count+1;
            if( higher[i] == 1) return count+1;
        }
        return count;
    }
}