class Solution {
    
    int maxLength = 0;
    public boolean isUnique(String str) {
        int[] count = new int[26];
        int strLength = str.length();
        for(int i = 0; i < strLength; i++) count[str.charAt(i) - 'a'] += 1;
        for(int i = 0 ; i < 26; i++ ) {
            if(count[i] > 1 ) return false;
        }
        return true;
    }

    public void computeMaxLengthSubSeq(List<String> arr, int start, int end, String str){
        if( start >= end ) {
            if( str.length() > maxLength ) maxLength = str.length();
            return;
        }
        if(isUnique(str+arr.get(start))) computeMaxLengthSubSeq(arr, start+1, end, str+arr.get(start));
        computeMaxLengthSubSeq(arr, start+1, end, str);
        return;
    }

    public int maxLength(List<String> arr) {
        int arrLength  =  arr.size();
        maxLength = 0;
        for(int i = 0; i < arrLength; i++ ) {
            if(isUnique(arr.get(i)))computeMaxLengthSubSeq(arr, i+1, arrLength, arr.get(i));
        }
        return maxLength; 
    }
}