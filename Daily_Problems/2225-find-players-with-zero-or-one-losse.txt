class Solution {

    HashMap<Integer,Integer> winner = new HashMap<Integer,Integer>();
    HashMap<Integer,Integer> loser = new HashMap<Integer,Integer>();

    public List<List<Integer>> findWinners(int[][] matches) {
        int numMatches = matches.length;
        for(int i = 0 ; i < numMatches; i++){
            int win = matches[i][0];
            int lose = matches[i][1];
            winner.put(win, winner.getOrDefault(win,0)+1);
            loser.put(lose, loser.getOrDefault(lose,0)+1);
        }
        List<List<Integer>> finalList = new ArrayList<List<Integer>>();
        ArrayList<Integer> winnerList = new ArrayList<Integer>();
        ArrayList<Integer> loserList = new ArrayList<Integer>();
        for (Map.Entry<Integer,Integer> entry : winner.entrySet()) {
            int player = entry.getKey();
            int winTimes = entry.getValue();
            if( loser.getOrDefault(player,0) == 0 ) winnerList.add(player);
        }
        for (Map.Entry<Integer,Integer> entry : loser.entrySet()) {
            int player = entry.getKey();
            int loseTimes = entry.getValue();
            if( loseTimes == 1) loserList.add(player);
        } 
        Collections.sort(winnerList);
        Collections.sort(loserList);
        finalList.add(winnerList);
        finalList.add(loserList);
        return finalList;
    }
}