/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public String  leaf1 = "", leaf2="";

    public void computeLeafSeq(TreeNode root, int treeNum) {
        if( root.left == null && root.right == null ) {
            if( treeNum == 1) leaf1 = leaf1  + "#"+String.valueOf(root.val);
            else leaf2 = leaf2  + "#"+String.valueOf(root.val);
            return;
        }
        if( root.left != null ) computeLeafSeq(root.left,treeNum);
        if( root.right != null ) computeLeafSeq(root.right,treeNum);
        return;
    }

    public boolean leafSimilar(TreeNode root1, TreeNode root2) {
        leaf1 = "";
        leaf2 = "";
        computeLeafSeq(root1,1);
        computeLeafSeq(root2,2);
        return leaf1.equals(leaf2);
    }
}