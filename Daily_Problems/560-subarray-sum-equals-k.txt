class Solution {
    public int subarraySum(int[] nums, int k) {
        int numsLength = nums.length;
        int[] prefixSum = new int[numsLength];
        prefixSum[0] = nums[0];
        HashMap<Integer,Integer> sumCount = new HashMap<Integer,Integer>();
        int count = 0;
        sumCount.put(prefixSum[0],1);
        for(int i = 1; i < numsLength; i++ ) {
            prefixSum[i] = prefixSum[i-1]+nums[i];
            int prevCount = sumCount.getOrDefault((prefixSum[i]-k),0);
            count += prevCount;
            sumCount.put(prefixSum[i],sumCount.getOrDefault(prefixSum[i],0)+1);
        }
        return count+sumCount.getOrDefault(k,0);
    }
}