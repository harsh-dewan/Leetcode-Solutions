/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode partition(ListNode head, int x) {
        if( head == null ) return head;
        ListNode head1 = null, tail1 = null, head2 = null, tail2 = null;
        while( head != null ) {
            if( head.val < x ) {
                // add to first pointer
                if( tail2 != null ) tail2.next = null;
                if( head1 == null ) {
                    head1 = head;
                    tail1 = head;
                }
                else {
                    tail1.next = head;
                    tail1 = tail1.next;
                }
            }
            else {
                if( tail1 != null ) tail1.next = null;
                if( head2 == null ) {
                    head2 = head;
                    tail2 = head;
                }
                else {
                    tail2.next = head;
                    tail2 = tail2.next;
                }
            }
            head = head.next;
        }
        if( head1 != null ) {
            tail1.next =  head2;
            return head1;
        }
        return head2;
    }
}